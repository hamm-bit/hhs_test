parser-raw: 

SBind "main" Nothing (App (App (Prim Add) (Num 1)) (Num 2))

Inference steps:
    1. inferProgram -> inferExp (App (App ...) (Num 2))
        2. inferExp -> inferExp (App (Prim Add) (Num 1))
            3. inferExp -> inferExp (Prim Add)
                        -> Forall [] (Base Int `Arrow` (... `Arrow` ...))
                4. specialize (Forall ...) -> (ty, suff = [])
                5. return (ty, extend g suff)

            5. inferExp (Num 1) -> (ty' = Base Int, g3)
            6. unify (g3 :< ((:=) alpha HOLE))
                ty = (Arrow ... (Arrow ... ...)) (Arrow ty' (FlexVar alpha))
                7. unify (Base Int) (Arrow (...) (...))

                9. unify (Arrow (ty' = Base Int) (FlexVar alpha))
            